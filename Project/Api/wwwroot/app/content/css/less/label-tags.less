@import "bootstrap/labels.less";
@import "bootstrap/forms.less";
@import "bootstrap/variables.less";

// for labels by ngTagsInput
tags-input {

  .tags {
    .form-control;
    .form-control-focus();

    padding: 3px 5px;
    height: auto;

    &.focused {
      @color-rgba: rgba(red(@input-border-focus), green(@input-border-focus), blue(@input-border-focus), .6);
      border-color: @input-border-focus;
      outline: 0;
      .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}");
    }

    .tag-item, .tag-item.selected {
      background: transparent;
      font: inherit; // Counter ng-tags-input.css
      border: none; // Counter ng-tags-input.css
      vertical-align: top;
      .label;

      span {
        vertical-align: baseline;
      }

      .remove-button {
        font-weight: normal;

        &:hover {
          text-decoration: none;
        }
      }
    }

    .tag-item.label-default, .tag-item.label-default.selected {
      .label-default;

      .remove-button {
        .label-default;
      }
    }

    .tag-item.label-primary, .tag-item.label-primary.selected {
      .label-primary;

      .remove-button {
        .label-primary;
      }
    }

    .tag-item.label-info, .tag-item.label-info.selected {
      .label-info;

      .remove-button {
        .label-info;
      }
    }

    .tag-item.label-warning, .tag-item.label-warning.selected {
      .label-warning;

      .remove-button {
        .label-warning;
      }
    }

    .tag-item.label-danger, .tag-item.label-danger.selected {
      .label-danger;

      .remove-button {
        .label-danger;
      }
    }

    .tag-item.selected span {
      text-decoration: underline;
    }

    .input {
      background-color: rgba(255, 255, 255, 0.5); //so that watermark is visible
      //force input elements to have dark text when they have a value
      color: @VF-DarkGrey-VeryDark;
      margin: 0;
      font-size: 11px;
    }
  }

  auto-complete .autocomplete {
    border-radius: 3px;

    .suggestion-item {
      font: inherit;
    }

    .suggestion-item.selected {
      background-color: @dropdown-link-active-bg;
    }
  }
}
mtk-label-editor {
  & > a {
    &:hover {
      text-decoration: none;
      cursor: pointer;
    }

    & > span {
      display: inline-block;
      margin: 4px 0px;


      .label {
       display: inline;
        vertical-align: baseline;
      }
    }
  }

  tags-input .tags {
    margin-top: -9px;
    margin-left: -8px;
  }

  auto-complete .autocomplete {
    margin-left: -8px;
  }
}

filter-by-labels {
  tags-input .tags input {
    cursor: pointer;
  }
}