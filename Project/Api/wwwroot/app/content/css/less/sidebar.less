//TODO - move these to a central place

@sidebar-width: 189px;
@sidebar-min-width: 42px;
@minimize-sidebar-below: 1100px; //@screen-lg-min;

@zindexFixedNavbar: 998;

//ace top nav/bar

@brand-size: 24px;
//brand logo font size

//some sidebar variables
@sidebar-bg: #F2F2F2;
@sidebar-border-right: #CCC;

@menu-active-color: #0B6CBC;
@menu-bg: #F9F9F9;
@menu-color: #585858;
@menu-focus-color: #1963AA;
@menu-hover-indicator: #3382AF;
@menu-subarrow-color: #666;
@menu-active-color: #0B6CBC;
@menu-open-bg: #FAFAFA;
@menu-active-bg: #FFF;

@submenu-border: #E5E5E5;
@submenu-bg: #FFF;
@submenu-item-color: #616161;
@submenu-item-border: #E4E4E4;
@submenu-item-hover: #4B88B7;
@submenu-item-active-icon: #C86139;

@submenu-left-border: #CCD7E2;
@submenu-active-left-border: #BCCFE0;

@menumin-btn-bg: #F3F3F3;
@menumin-btn-border: #E0E0E0;
@menumin-icon-color: #AAA;
@menumin-icon-border: #BBB;
@menumin-icon-bg: #FFF;
@menumin-bg: #F5F5F5;
@menumin-border: #CCC;
@menumin-text-border: #DDD;
@menumin-shadow: ~"2px 1px 2px 0 rgba(0,0,0,0.2)";

@shortcuts-bg: #FAFAFA;
@shortcuts-border: #DDD;

body {
  padding-left: @sidebar-width;

  &.sidebar-menu-min {

    #launcher {
      //display: none;
      left: -90px !important;
      transition-property: left !important;
      transition-timing-function: ease-out !important;
      transition-duration: 300ms !important;
    }

    #launcher:hover, #launcher:active {
      left: 0 !important;
    }

    /* side menu minimized manually -- see below for automatic minimizing of menu based on media query*/
    padding-left: @sidebar-min-width;
    .sidebar {
      .minified-sidebar();
    }
    //make the toggling button face outward
    #sidebar-collapse-button {
      .goSmall {
        display: none;
      }
      .goBig {
        display: inline;
      }
    }
  }
}

.sidebar {
  width: @sidebar-width;
  position: fixed;
  z-index: @zindexFixedNavbar - 1;
  top: @navbar-height;
  left: 0;
  bottom: 0;
  //border-right: 1px solid @sidebar-border-right;
  border-right: 2px solid @sidebar-bg;
  //box-shadow: 10px 0px 3px -12px #999;

  background-color: @sidebar-bg;
  &:before {
    /* the grey background of sidebar */
    left: 0;
    right: auto;
    content: "";
    display: block;
    width: @sidebar-width;
    position: fixed;
    bottom: 0px;
    top: 0px;
    z-index: -1;
    //background-color: @sidebar-bg;
    //border-right: 1px solid @sidebar-border-right;
  }

}

.skin-1 .sidebar #VersionBadge{
  color: #fff;
}
.sidebar-scrollbox{
  overflow-y: hidden; 
  overflow-x: hidden; 
  width: @sidebar-width + 3;
  height: 100%;  
}
.sidebar-scroll-innerbox{
  overflow-y: scroll;
  overflow-x: hidden;
  &::-webkit-scrollbar {
    /* Only works in webkit (chrome-blink, safari-webkit)*/
    display: none;
    width:0px;
  }   
  width: @sidebar-width; 
  height: 100%;
}
@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {  
   /* IE10+ specific styles go here */     
  .sidebar-scroll-innerbox{    
    width: @sidebar-width + 24 !important; 
  }
}
@supports (-ms-ime-align: auto) {  
   /* Ms Edge specific styles go here */   
  .sidebar-scroll-innerbox{    
    width: @sidebar-width + 24 !important; 
  }
}
@-moz-document url-prefix() { 
   /* Firefox specific styles go here */   
  .sidebar-scroll-innerbox{    
    width: @sidebar-width + 24 !important; 
  }
}
.sidebar-filler-box{
  height: 38px;
}

/* side navigation */
li [class^="icon-"], li [class*=" icon-"] {
  &, .nav-list & {
    width: auto;
  }
}

.sidebar-collapse{     
  width: @sidebar-width;
}
.nav-list {
  margin: 0;
  padding: 0;
  list-style: none;
  .nav-header {
    margin: 0;
  }
  > li {    
    width: @sidebar-width;
    display: block;
    padding: 0;
    margin: 0;
    border: none;
    //border-top: 1px solid #FCFCFC;
    //border-bottom: 1px solid #E5E5E5;
    position: relative;
    pointer-events: all;

    &:first-child {
      border-top: none;
    }
    > a {
      display: block;
      height: 38px;
      line-height: 36px;
      margin: 0;
      padding: 0 16px 0 7px;
      //background-color: @menu-bg;
      background-color: transparent;
      color: @menu-color;
      text-shadow: none !important;
      font-size: 13px;
      text-decoration: none;
      > [class*="icon-"]:first-child {
        display: inline-block;
        vertical-align: middle;
        min-width: 30px;
        text-align: center;
        font-size: 18px;
        font-weight: normal;
      }

      &:focus {
        background-color: @menu-bg;
        color: @menu-focus-color;
      }


      > .arrow {
        /* the submenu indicator arrow */
        display: inline-block;
        width: 14px !important;
        height: 14px;
        line-height: 14px;

        text-shadow: none;
        font-size: 18px;

        position: absolute;
        right: 9px;
        top: 11px;

        padding: 0;
        color: @menu-subarrow-color;
      }

    }
    > a.no-bg {
        background-color:inherit !important;       
        color:inherit !important;  
    }
    &.separator {
      height: 3px;
      background-color: transparent;
      position: static;
      margin: 1px 0;

      .box-shadow(none);
    }

    /* menu active/open states */
    &.open {
      border-bottom-color: @submenu-border;
      > a {
        background-color: @menu-open-bg;
        color: @menu-color; //open class is on the container
        //- so we want the parent to remain the normal colour,
        //as parents of submenus can be clickable themselves as links,
        // they aren't just parents of other links as in Ace
        > .arrow {
          color: @menu-focus-color;
        }
      }
    }
    &.active {
      background-color: @menu-active-bg;
      > a {
        &, &:hover, &:focus, &:active {
          background-color: @menu-active-bg;
          color: @menu-active-color;
          font-weight: bold;
          font-size: 13px;
          > .arrow {
            color: @menu-focus-color;
          }
        }

        > [class*="icon-"] {
          font-weight: normal;
        }

        &:hover:before {
          /* no left side menu item border on active state */
          display: none;
        }
      }
      //////

      &:after {
        /* the border on right of active item */
        display: inline-block;
        content: "";
        position: absolute;
        right: -2px;
        top: -1px;
        bottom: 0;
        //border-right: 2px solid @menu-active-color;
      }
    }

    /* submenu */
    &.active .submenu, &.open .submenu {
      display: block;
    }
    .submenu {
      display: none;
      list-style: none;
      margin: 0;
      padding: 0;

      position: relative;
      background-color: @submenu-bg;

      //border-top: 1px dotted @submenu-border;

      > li {
        margin-left: 0;
        position: relative;

        > a {
          display: block;
          position: relative;
          color: @submenu-item-color;

          padding: 7px 0 8px 37px;
          margin: 0;

          //border-top: 1px dotted @submenu-item-border;
          &:focus {
            text-decoration: none;
          }
          &:hover {
            text-decoration: none;
            color: @submenu-item-hover;
          }
        }

        &.active > a {
          color: @menu-active-color;
        }

        /* optional icon before each item */
        a > [class*="icon-"]:first-child {
          display: none;

          font-size: 12px;
          font-weight: normal;
          width: 18px;
          height: auto;
          line-height: 12px;
          text-align: center;
          position: absolute;
          left: 10px;
          top: 11px;
          z-index: 1;

          background-color: #FFF;
        }
        //&.active > a > [class*="icon-"]:first-child,
        //&:hover > a > [class*="icon-"]:first-child {
        //  display: inline-block;
        //}
        //&.active > a > [class*="icon-"]:first-child {
        //  color: @submenu-item-active-icon;
        //}


      }
      // > li
    }
    //end of submenu

    > .submenu {
      //the first level submenu
      > li {
        //tree like menu
        //&:before {
        //  /* the horizontal line */
        //  content: "";
        //  display: inline-block;
        //  position: absolute;
        //
        //  width: 8px;
        //  left: 18px;
        //  top: 17px;
        //  border-top: 1px solid @submenu-left-border;
        //}
        //&:first-child > a {
        //  border-top: 1px solid #FAFAFA;
        //}
      }

      //&:before {
      //  content: "";
      //  display: block;
      //  position: absolute;
      //  z-index: 1;
      //  left: 18px;
      //  top: 0;
      //  bottom: 0;
      //
      //  border-left: 1px solid @submenu-left-border;
      //}
    }
    &.active {
      > .submenu {
        > li {
          &:before {
            border-top-color: @submenu-active-left-border;
          }
        }
        &:before {
          border-left-color: @submenu-active-left-border;
        }
      }
    }

  }
}

//.nav-list li  - note, not > so all descendents
.nav-list li {
  .active_state_caret() {
    display: block;
    content: "";
    position: absolute !important;
    right: 0;
    top: 4px;

    border: 8px solid transparent;
    border-width: 14px 10px;
    border-right-color: @menu-active-color;
  }

  .submenu {
    /* needed for webkit based browsers to slideToggle without problem */
    overflow: hidden;
  }

  &.active > a:after {
    .active_state_caret();
  }

  &.open > a:after {
    /* no caret for open menu item */
    //we put this after .active > a:after to override it
    display: none;
  }
  &.active.open > .submenu > li.active.open > a.dropdown-toggle:after {
    /* don't display caret on active open item who is open and has children */
    display: none;
  }
  &.active > .submenu > li.active > a:after {
    /** don't display caret on active item whose parent is not open
    useful for hiding the caret when submenu is sliding up */
    display: none;
  }
  &.active.open > .submenu > li.active > a:after {
    /* display caret on active item whose parent is open */
    display: block;
    .menu-min & {
      display: none;
    }
  }

  &.active.no-active-child {
    > a:after {
      /* show caret for active menu item with childs which is not open(i.e. no submenu item is active) */
      display: inline-block !important;
    }
  }
}

//end of .nav-list li

.nav-list a {
  .badge, .label {
    font-size: 12px;
    padding-left: 6px;
    padding-right: 6px;
    position: absolute;
    top: 9px;
    right: 11px;
    opacity: 0.88;
    [class*="icon-"] {
      vertical-align: middle;
      margin: 0;
    }
  }
  &.dropdown-toggle {
    .badge, .label {
      right: 28px;
    }
  }
  &:hover {
    .badge, .label {
      opacity: 1;
    }
  }

  .menu-min & {
    .badge, .label {
      position: relative;
      top: -1px;
      right: auto;
      left: 4px;
    }
  }
}

.nav-list .submenu .submenu a {
  .badge, .label {
    top: 6px;
  }
  .menu-min & {
    .badge, .label {
      top: 0;
    }
  }
}

/* side menu minimizer icon */
#sidebar-collapse-button {
  //border-top: 1px solid @menumin-btn-border;
  //background-color: @menumin-btn-bg;

  text-align: right;
  padding: 3px 0;

  position: relative;

  > [class*="icon-"] {
    display: inline-block;

    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    color: @menumin-icon-color;

    //border: 1px solid @menumin-icon-border;
    padding: 0 5px;
    line-height: 18px;

    //border-radius: 16px;

    //background-color: @menumin-icon-bg;
    position: relative;
  }
  //make the toggling button face inward by default
  .goSmall {
    display: inline;
  }
  .goBig {
    display: none;
  }

  &:before {
    content: "";
    display: inline-block;

    height: 0;
    //border-top: 1px solid @menumin-btn-border;
    position: absolute;
    left: 15px;
    right: 15px;
    top: 13px;
  }

  :hover {
    color: @menu-active-color;
  }

}

/* sidebar shortcuts icon */
.sidebar-shortcuts {
  background-color: @shortcuts-bg;
  border-bottom: 1px solid @shortcuts-border;
  text-align: center;

  line-height: 37px;
  max-height: 40px;
  margin-bottom: 0;
}

.sidebar-shortcuts-large {
  padding-bottom: 4px;
  > .btn > [class*="icon-"] {
    font-size: 110%;
  }
}

.sidebar-shortcuts-mini {
  display: none;
  font-size: 0;
  width: 42px;
  line-height: 18px;
  padding-top: 2px;
  padding-bottom: 2px;

  background-color: @submenu-bg;

  > .btn {
    border-width: 0 !important;
    font-size: 0;
    line-height: 0;
    padding: 8px !important;
    margin: 0 1px;

    border-radius: 0 !important;
    .opacity(85);
  }
}

/*Responsiveness for the sidebar
On large screens - show full sidebar, allow user to toggle it to minified mode
On smaller screens - show only minified sidebar, don't allow the user to change it.
When resizing from small back up to large, remember if user had toggled minified mode or not.
 To do this we need to toggle a class to set the minified state, but also have that state triggered independently by a media query
The sidebar-menu-min class must be added to the body element, not the sidebar as with ace.
*/

//we need the same css for both a media query result and a class, so we use a mixin
.minified-sidebar() {
  @submenu-width:  (@sidebar-width - @sidebar-min-width);
  & {
    width: @sidebar-min-width;
    &:before {
      width: @sidebar-min-width;
    }
    + .main-content {
      margin-left: (@sidebar-min-width + 1);
      .breadcrumbs.fixed {
        left: (@sidebar-min-width + 1);
      }
    }
    .sidebar-scrollbox{ 
      >.sidebar-scroll-innerbox > ul {        
        width:42px;
      }
    }
    /* minimized sidebar shortcuts */
    .sidebar-shortcuts {
      position: relative;
    }
    .sidebar-shortcuts-mini {
      display: block;
    }

    .sidebar-shortcuts-large {
      display: none;
      position: absolute;
      left: @sidebar-min-width;
      top: -1px;
      width: (@sidebar-width - 14);
      z-index: 20;
      background-color: @submenu-bg;
      .box-shadow(@menumin-shadow);
      border: 1px solid @menumin-border;
      padding: 0 2px 3px;
    }
    .sidebar-shortcuts:hover .sidebar-shortcuts-large {
      display: block;
    }
    .sidebar-collapse{      
      width:40px;
    }
    .sidebar-collapse-button {
      /* minimized collapse button */
      &:before {
        left: 5px;
        right: 5px;
      }
      > [class*="icon-"] {
        font-size: 13px;
        padding: 0 4px;
        line-height: 15px;

        border-width: 1px;
        border-color: darken(@menumin-icon-border, 5%);
      }
    }

    .hide-collapse {
      display: none;
    }

    .nav-list > li {
      width:42px;
      > a.zendesk-text{
        > .menu-text{
          color: @submenu-item-color;
        }
      }
      > a {
        position: relative;
        > .menu-text {
          display: none;

          position: absolute;
          left: (@sidebar-min-width - 1);
          top: 0px;
          width: @submenu-width - 1;
          height: 39px;

          line-height: 38px;
          background-color: @sidebar-bg; //@menumin-bg;
          z-index: 121;

          .box-shadow(@menumin-shadow);
          //border: 1px solid @menumin-border;

          padding-left: 12px;
        }
        &.dropdown-toggle > .menu-text {
          .box-shadow(none);
          border: none;
          top: -1px;
          left: @sidebar-min-width;
          width: (@sidebar-width - 26);
          border-bottom: 1px solid @menumin-text-border;
        }
        .arrow {
          display: none;
        }
        > [class*="icon-"]:first-child.menu-warning {
          color: @brand-warning;
        }

        &:hover:before {
          /* the right side border on hover */
          width: 2px;
        }
      }


      &.active > a > .menu-text {
        border-left-color: @menu-focus-color;
      }
      &.open {
        > a {
          background-color: @menu-open-bg;
          color: @menu-color;
        }
        &.active > a {
          background-color: @menu-active-bg;
        }
        &:hover > a {
          color: @menu-focus-color;
        }


      }

      &.active > a {
        color: @menu-active-color;
      }

      &.active > a:after {
        /* the caret */
        border-width: 10px 6px;
        top: 8px;
      }
      &.active.open > a:after {
        display: block;
      }
      &.active.open li.active > a:after {
        display: none;
      }

      > .submenu {

        background: @submenu-bg;
        position: absolute;
        z-index: 120;
        left: (@sidebar-min-width - 1);
        top: -2px;

        width: @submenu-width;
        //border: 1px solid @menumin-border;

        .box-shadow(@menumin-shadow);

        padding-top: 40px;
        padding-bottom: 2px;

        display: none !important;

        &:before {
          /* hide the tree like submenu in minimized mode */
          display: none;
        }

        li {
          &:before {
            display: none;
          }

          > a {
            //border-left:none;
            margin-left: 0;
            padding-left: 24px;
            > [class*="icon-"]:first-child {
              left: 4px;
            }
          }

          > .submenu > li {
            width:44px;
            > a {
              /*3rd level*/
              margin-left: 0px;
              padding-left: 30px;
            }
            > .submenu > li > a {
              /*4th level*/
              margin-left: 0px;
              padding-left: 45px;
            }
          }
        }

        li.active > a:after {
          display: none;
        }
      }



      &.active > .submenu {
        display:none;
        border-left-color: @menu-focus-color;
      }

    }

  }

}

/*side menu minimized automatically
*/
@media only screen and (max-width: @minimize-sidebar-below) {
  .sidebar {
    .minified-sidebar();
  }

  //we hide the toggling button
  #sidebar-collapse-button {
    display: none;
  }

  #launcher {
    //display: none;
    left: -90px !important;
    transition-property: left !important;
    transition-timing-function: ease-out !important;
    transition-duration: 300ms !important;
  }

  #launcher:hover, #launcher:active {
    left: 0 !important;
  }

  body {
    padding-left: @sidebar-min-width;
  }
}


//3rd & 4th level menu
.nav-list > li > .submenu {
  li > .submenu {
    border-top: none;
    background-color: transparent;
    display: none;
  }
  li.active > .submenu {
    display: block;
  }

  a > .arrow {
    right: 11px;
    top: 10px;
    font-size: 16px;
    color: #6B828E;
  }

  li > .submenu > li > a > .arrow {
    right: 12px;
    top: 9px;
  }

  li > .submenu > li {
    line-height: 16px;
    &:before {
      //the tree like menu
      display: none;
    }

    > a {
      /*3rd level*/
      margin-left: 20px;
      padding-left: 22px;
    }
    > .submenu > li > a {
      /*4th level*/
      margin-left: 20px;
      padding-left: 38px;
    }

    a > [class*="icon-"]:first-child {
      display: inline-block;
      color: inherit;
      font-size: 14px;

      position: static;
      background-color: transparent;
    }

    a {
      font-size: 13px;
      color: #777;

      &:hover {
        color: desaturate(@menu-focus-color, 25%);
        text-decoration: underline;
        [class*="icon-"] {
          text-decoration: none;
          color: desaturate(@menu-focus-color, 25%);
        }
      }
    }

  }

  li.open > a {
    color: desaturate(@menu-focus-color, 12%);
    > [class*="icon-"]:first-child {
      display: inline-block;
    }
    .arrow {
      color: desaturate(@menu-focus-color, 12%);
    }
  }
  li > .submenu li.open > a {
    color: desaturate(@menu-focus-color, 12%);
    > [class*="icon-"]:first-child {
      display: inline-block;
      color: @menu-focus-color;
    }

    .arrow {
      color: desaturate(@menu-focus-color, 12%);
    }
  }

  li > .submenu li.active > a {
    color: desaturate(@menu-active-color, 8%);
    > [class*="icon-"]:first-child {
      display: inline-block;
      color: desaturate(@menu-active-color, 8%);
    }
  }

}

//.nav-list > li > .submenu

.nav-list > li {
  &.active.open li.active > a:after {
    top: 2px;
    border-width: 14px 8px;
  }
  &.active.open li.active.open li.active > a:after {
    top: 0;
  }
}

body.sidebar-menu-min .sidebar .nav-list > li > .submenu {

}

/* side menu toggler in mobile view */
.menu-toggler {
  display: none;
}

///////HOVER stuff
//add hover functionality only when appropriate

body.allow-hover {


}

.hoverStatesMinimised() {
  //hovering stuff for when the menu is small
  .nav-list > li {
    &:hover > a {
      color: @menu-focus-color;
      > .menu-text {
        display: block;
      }
    }
    &:hover > .submenu {
      display: block !important;
    }

    >a:hover {
      background-color: #FFF;
      color: @menu-focus-color;

      &:before {
        display: block;
        content: "";
        position: absolute;
        top: -1px;
        bottom: 0;
        left: 0;
        width: 3px;
        max-width: 3px;
        overflow: hidden;
        background-color: @menu-hover-indicator;
      }
    }

  }
}

.hoverStatesMaximised() {
  //hovering stuff for when the menu is big
  .nav-list > li,  .submenu > li {
    &:hover > a {
    //  color: @menu-focus-color;
    }
    >a:hover {
     // background-color: #FFF;
     // color: @menu-focus-color;

      &:before {
        display: block;
        content: "";
        position: absolute;
        top: -1px;
        bottom: 0;
        left: 0;
        width: 3px;
        max-width: 3px;
        overflow: hidden;
        //background-color: @menu-hover-indicator;
        background-color: @menu-active-color;
      }
    }
  }
}

//Minimised
@media only screen and (max-width: @minimize-sidebar-below) {
  body.allow-hover {
    .hoverStatesMinimised()
  }
}

body.sidebar-menu-min.allow-hover {
  .hoverStatesMinimised()
}

@media only screen and (min-width: (@minimize-sidebar-below + 1)) {
  body.allow-hover {
    .hoverStatesMaximised()
  }
}

// Only touch screens
.touch-enabled {

  // Small screens (sidebar collapsed)
  @media only screen and (max-width: @minimize-sidebar-below) {
    .nav-list > li {
      &.open { // Toggle "open" class and submenu shows and hides
        > a {
          > .menu-text {
            display: block;
          }
        }
        > .submenu {
          display: block !important;
        }
      }
    }
  }

  // Big screen
  @media only screen and (min-width: (@minimize-sidebar-below + 1)) {
    // Sidebar chosen to collapse
    &.sidebar-menu-min {
      .nav-list > li {

        &.open { // Toggle "open" class and submenu shows and hides
          > a {
            > .menu-text {
              display: block;
            }
          }
          > .submenu {
            display: block !important;
          }
        }
      }
    }
  }
}


